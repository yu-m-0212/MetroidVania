//--------------------------------------------------------------------------------------------
//	ファイル名	：	library.h
//	アプリ名	：	汎用的なファイルなので、実行ファイルは不特定
//	作成者		：	植山沙欧
//	作成日		：	2007.02.09
//	機能		：	VisualStudio2005と2003の共存をするためのヘッダーです
//	使用方法	：	VisualStudio2005以前の開発環境を使用するときはコメントアウトします
//	更新履歴	：	2007.02.09	Ver1.00		植山沙欧	機能の実現
//--------------------------------------------------------------------------------------------

#pragma once

//	VisualStudio2005以外でコンパイルする場合、
//	VS2005の定義はコメントアウトしておく
#define VS2005

//	条件式が定数ですの警告を消す
#pragma warning (disable: 4127)

//	参照カウンタを減らすマクロ
#ifndef kREL
#define kREL(x) if(x){x->Release();x=nullptr;}	//	xのオブジェクトがnullptrでは無い場合は、xを解放する
#endif



//--------------------------------------------------------------------------------------------
//	Debugマクロ
//	　●　_DEBUGMOREを定義すると、VisualStudioのデバッグウインドウに情報が表示されます
//--------------------------------------------------------------------------------------------
#define _DEBUGMORE

#if defined _DEBUGMORE && defined _DEBUG
	#define verOutputString(x) OutputDebugString(x);
	#define verOutputString_ss(x,y) x.str("");y;OutputDebugString(x.str().c_str());
	#define verMakeFunctionNameString(x) x << __FUNCTION__ << "(): "
#else
	#define verOutputString(x) ;
	#define verOutputString_ss(x,y) ;
#endif


//--------------------------------------------------------------------------------------------
//	スカラ型をdeleteします
//--------------------------------------------------------------------------------------------
#define verDelete_Scalar(p) {\
	if(p)\
	{\
		delete p;\
		p = nullptr;\
	}\
}

//--------------------------------------------------------------------------------------------
//	ベクタ型をdeleteします
//--------------------------------------------------------------------------------------------
#define verDelete_Vector(p) {\
	if(p)\
	{\
		delete[] p;\
		p = nullptr;\
	}\
}

//--------------------------------------------------------------------------------------------
//	使用したハンドルを閉じます	
//--------------------------------------------------------------------------------------------
#define verCloseHandle(h) {\
	if((h != INVALID_HANDLE_VALUE) || (h != nullptr))\
	{\
		CloseHandle(h);\
		h = nullptr;\
	}\
}
